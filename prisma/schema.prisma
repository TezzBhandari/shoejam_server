// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id            String   @id @default(cuid())
  category_name String   @unique @db.VarChar(100)
  category_slug String   @unique @db.VarChar(120)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // many to many relation between product and cateogry table 
  products Products_Categories[]

  // many to many realtionship between product_attributes (eg: color, size, shoesize, etc) and category
  product_attributes Category_Product_Attribute[]

  // subcategory relation
  parent_cateogry    Category? @relation("CategoriesToSubcategory", fields: [parent_category_id], references: [id])
  parent_category_id String?

  subcategory Category[] @relation("CategoriesToSubcategory")

  // indexing category name and slug
  @@index([category_slug])
  @@index([category_name])
}

model Product {
  id                  String   @id @default(cuid())
  product_name        String   @unique @db.VarChar(200)
  product_slug        String   @unique @db.VarChar(250)
  product_description String   @db.Text
  price               Decimal
  compare_at_price    Decimal
  is_featured         Boolean? @default(dbgenerated("(false)"))
  is_trending         Boolean? @default(dbgenerated("(false)"))
  is_published        Boolean? @default(dbgenerated("(false)"))

  // many to many relation between product and cateogry table 
  categories Products_Categories[]

  // product and its thumnail
  thumnail Product_Image?

  // product and brand realtionship: many to one
  brand    Brand?  @relation(fields: [brand_id], references: [id])
  brand_id String?

  @@index([product_name])
  @@index([product_slug])
  @@index([price])
  @@index([is_published])
}

model Sub_Product {
  id       String  @id @default(cuid())
  price    Decimal
  sku      String  @db.VarChar(100)
  quantity Int     @default(0)

  // Sub Product and Product Image Relation 
  sub_product_images Product_Image[]

  // many to many relation between attribute_values and sub_product table using join table
  attribute_values Sub_Product_Attribute_Values[]

  @@index([price])
}

model Brand {
  id         String @id @default(cuid())
  brand_name String @db.VarChar(100)
  brand_slug String @db.VarChar(120)

  //
  products Product[]

  @@index([brand_name])
  @@index([brand_slug])
}

model Product_Attribute {
  id             String @id @default(cuid())
  attribute_name String @db.VarChar(50)

  // Product Attribute and Attribute Value Relation | one attribute (e.g: color etc) has many values (e.g: red, blue, green, etc)
  attribute_values Attribute_Value[]

  // many to many realtionship between product_attributes (eg: color, size, shoesize, etc) and category

  categories Category_Product_Attribute[]
}

model Attribute_Value {
  id              String @id @default(cuid())
  attribute_value String @db.VarChar(70)

  // Product Attribute and Attribute Value Relation | one attribute (e.g: color etc) has many values (e.g: red, blue, green, etc)
  Product_Attribute    Product_Attribute @relation(fields: [product_attribute_id], references: [id])
  product_attribute_id String

  // many to many relation between attribute_values and sub_product table using join table
  sub_products Sub_Product_Attribute_Values[]
}

model Product_Image {
  id        String @id @default(cuid())
  image_url String

  // Sub Product and Product Image Relation 
  sub_product    Sub_Product @relation(fields: [sub_product_id], references: [id])
  sub_product_id String

  // product and it's thumnail
  product    Product @relation(fields: [product_id], references: [id])
  product_id String  @unique
}

// Join table: Sub_Product and Product Attribute Values | can't get each variantion of a subproduct from this relationship
model Sub_Product_Attribute_Values {
  // many to many relation between attribute_values and sub_product table using join table
  attribute_value    Attribute_Value @relation(fields: [attribute_value_id], references: [id])
  attribute_value_id String

  // many to many relation between attribute_values and sub_product table using join table
  sub_product    Sub_Product @relation(fields: [sub_product_id], references: [id])
  sub_product_id String

  @@id([attribute_value_id, sub_product_id])
}

// Join table: Product and category
model Products_Categories {
  // many to many relation between product and cateogry table 
  product    Product @relation(fields: [product_id], references: [id])
  product_id String

  // many to many relation between product and cateogry table 
  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  @@id([product_id, category_id])
}

// Join Table: category and product attribute
model Category_Product_Attribute {
  // many to many realtionship between product_attributes (eg: color, size, shoesize, etc) and category

  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  // many to many realtionship between product_attributes (eg: color, size, shoesize, etc) and category

  product_attribute    Product_Attribute @relation(fields: [product_attribute_id], references: [id])
  product_attribute_id String

  @@id([category_id, product_attribute_id])
}
